https://www.codingninjas.com/studio/problems/stack-implementation-using-array_3210209?leftPanelTabValue=PROBLEM&customSource=studio_nav

using array:
public class Solution{
    static class Stack {
        int top=-1;
        int capacity;
        int[] arr;
        Stack(int capacity) {
            // Write your code here.
            this.capacity=capacity;
            arr=new int[capacity];
        }
        public void push(int num) {
            // Write your code here.
            if(top<capacity-1) arr[++top]=num;
        }
        public int pop() {
            // Write your code here.
            if(top>=0) return arr[top--];
            return -1;
        }
        public int top() {
            // Write your code here.
           if(top>=0) return arr[top];
           return -1;
        }
        public int isEmpty() {
            // Write your code here.
            return top==-1?1:0;
        }
        public int isFull() {
            // Write your code here.
            return top==capacity-1?1:0;
        }
    }
}

using arraylist:

import java.util.ArrayList;
public class Solution{
    static class Stack {
        ArrayList<Integer> arr;
        int capacity;
        int top;
        Stack(int capacity) {
           
          arr=new ArrayList<>(capacity);
           for (int i = 0; i < capacity; i++) {
                arr.add(0);
            }
          top=-1;
           this.capacity=capacity;
          

        }
        public void push(int num) {
          if(top!=capacity-1) arr.set(++top,num);

        }
        public int pop() {
          if(top>=0) return arr.get(top--);
          return -1;

        }
        public int top() {
          if(top>=0) return arr.get(top);
          return -1;

        }
        public int isEmpty() {
          return top==-1?1:0;

        }
        public int isFull() {
          return top==capacity-1?1:0;

        }
    }
}
